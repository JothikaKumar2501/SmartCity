/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author johasu
 */
import java.awt.event.KeyEvent;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.JOptionPane;
import smartcity.MyDatabase;

public class admin_new_panel extends javax.swing.JFrame {

    /**
     * Creates new form admin_new_panel
     */
    public admin_new_panel() {
        initComponents();
        manageUsersPanel.setVisible(false);
        libraryPanel.setVisible(false);
        atmPanel.setVisible(false);
        b4.setVisible(false);
        b5.setVisible(false);
        b6.setVisible(false);
        collegePanel.setVisible(true);
        updateCollegeTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        a1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        a2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        a3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        a4 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        a5 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        a6 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        a7 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        atmPanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        anField = new javax.swing.JTextField();
        aaField = new javax.swing.JTextField();
        ahField = new javax.swing.JTextField();
        atmDeleteButton = new javax.swing.JButton();
        atmAddButton = new javax.swing.JButton();
        atmUpdateButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        atmTable = new javax.swing.JTable();
        collegePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cnField = new javax.swing.JTextField();
        cwField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        caField = new javax.swing.JTextField();
        collegeDeleteButton = new javax.swing.JButton();
        collegeAddButton = new javax.swing.JButton();
        collegeUpdateButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        collegeTable = new javax.swing.JTable();
        libraryPanel = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        lnField = new javax.swing.JTextField();
        laField = new javax.swing.JTextField();
        libDeleteButton = new javax.swing.JButton();
        libAddButton = new javax.swing.JButton();
        libUpdateButton = new javax.swing.JButton();
        ltField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        libraryTable = new javax.swing.JTable();
        b4 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        hotelname = new javax.swing.JTextField();
        hotelloc = new javax.swing.JTextField();
        AddhotelButton = new javax.swing.JButton();
        DeletehotelButton = new javax.swing.JButton();
        UpdatehotelButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        hoteltable = new javax.swing.JTable();
        priceField = new javax.swing.JTextField();
        b5 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        hospital_type = new javax.swing.JComboBox<>();
        hospitalname = new javax.swing.JTextField();
        hospitalLocation = new javax.swing.JTextField();
        hospital_num = new javax.swing.JTextField();
        AddhospitalButton = new javax.swing.JButton();
        DeletehospitalButton = new javax.swing.JButton();
        UpdatehospitalButton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        hospitaltable = new javax.swing.JTable();
        b6 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        numField = new javax.swing.JTextField();
        travelAddButton = new javax.swing.JButton();
        travelDeleteButton = new javax.swing.JButton();
        travelUpdateButton = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        traveltable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        rating = new javax.swing.JTextField();
        manageUsersPanel = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        MUAddButton = new javax.swing.JButton();
        MUUpdateButton = new javax.swing.JButton();
        userNameField = new javax.swing.JTextField();
        mailField = new javax.swing.JTextField();
        passwordField = new javax.swing.JTextField();
        userType = new javax.swing.JComboBox<>();
        MUDeleteButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        usersTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));

        jLabel7.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Admin Menu");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(0, 255, 204));

        a1.setBackground(new java.awt.Color(255, 255, 255));
        a1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a1MouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(204, 0, 0));
        jLabel8.setText("MANAGE COLLEGE");

        javax.swing.GroupLayout a1Layout = new javax.swing.GroupLayout(a1);
        a1.setLayout(a1Layout);
        a1Layout.setHorizontalGroup(
            a1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        a1Layout.setVerticalGroup(
            a1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(a1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        a2.setBackground(new java.awt.Color(255, 255, 255));
        a2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a2MouseClicked(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(204, 0, 0));
        jLabel9.setText("MANAGE LIBRARY");

        javax.swing.GroupLayout a2Layout = new javax.swing.GroupLayout(a2);
        a2.setLayout(a2Layout);
        a2Layout.setHorizontalGroup(
            a2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(a2Layout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        a2Layout.setVerticalGroup(
            a2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(a2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        a3.setBackground(new java.awt.Color(255, 255, 255));
        a3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a3MouseClicked(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 0, 0));
        jLabel10.setText("MANAGE ATM");

        javax.swing.GroupLayout a3Layout = new javax.swing.GroupLayout(a3);
        a3.setLayout(a3Layout);
        a3Layout.setHorizontalGroup(
            a3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        a3Layout.setVerticalGroup(
            a3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(a3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        a4.setBackground(new java.awt.Color(255, 255, 255));
        a4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a4MouseClicked(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(204, 0, 0));
        jLabel27.setText("MANAGE HOTEL");

        javax.swing.GroupLayout a4Layout = new javax.swing.GroupLayout(a4);
        a4.setLayout(a4Layout);
        a4Layout.setHorizontalGroup(
            a4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        a4Layout.setVerticalGroup(
            a4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(a4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel27)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        a5.setBackground(new java.awt.Color(255, 255, 255));
        a5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a5MouseClicked(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(204, 0, 0));
        jLabel28.setText("MANAGE HOSPITAL");

        javax.swing.GroupLayout a5Layout = new javax.swing.GroupLayout(a5);
        a5.setLayout(a5Layout);
        a5Layout.setHorizontalGroup(
            a5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(a5Layout.createSequentialGroup()
                .addComponent(jLabel28)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        a5Layout.setVerticalGroup(
            a5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(a5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel28)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        a6.setBackground(new java.awt.Color(255, 255, 255));
        a6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a6MouseClicked(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(204, 0, 0));
        jLabel29.setText("MANAGE TRAVEL AGENCY");

        javax.swing.GroupLayout a6Layout = new javax.swing.GroupLayout(a6);
        a6.setLayout(a6Layout);
        a6Layout.setHorizontalGroup(
            a6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        a6Layout.setVerticalGroup(
            a6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(a6Layout.createSequentialGroup()
                .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                .addContainerGap())
        );

        a7.setBackground(new java.awt.Color(255, 255, 255));
        a7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a7MouseClicked(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(204, 0, 0));
        jLabel30.setText("MANAGE USERS");

        javax.swing.GroupLayout a7Layout = new javax.swing.GroupLayout(a7);
        a7.setLayout(a7Layout);
        a7Layout.setHorizontalGroup(
            a7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(a7Layout.createSequentialGroup()
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        a7Layout.setVerticalGroup(
            a7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(a7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel30)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(a1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(a2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(a3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(a4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(a5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(a6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(a7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(a1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(a2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(a3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(a4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(a5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(a6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(a7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 106, Short.MAX_VALUE))
        );

        atmPanel.setBackground(new java.awt.Color(255, 204, 255));

        jLabel11.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel11.setText("Branch Name:");

        jLabel12.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel12.setText("Location of the ATM:");

        jLabel13.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel13.setText("Open hours:");

        anField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        aaField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        ahField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        atmDeleteButton.setBackground(new java.awt.Color(255, 0, 0));
        atmDeleteButton.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        atmDeleteButton.setText("DELETE");
        atmDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atmDeleteButtonActionPerformed(evt);
            }
        });

        atmAddButton.setBackground(new java.awt.Color(0, 255, 102));
        atmAddButton.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        atmAddButton.setText("ADD");
        atmAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atmAddButtonActionPerformed(evt);
            }
        });

        atmUpdateButton.setBackground(new java.awt.Color(255, 255, 0));
        atmUpdateButton.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        atmUpdateButton.setText("UPDATE");
        atmUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atmUpdateButtonActionPerformed(evt);
            }
        });

        atmTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Andhra Bank ATM", "43, Anna Salai, Sashri Nagar, Vasanthapuram, Kosapet", "24 Hours"},
                {"Axis Bank ATM", "No 15/2, New Door No 30 Officers Lane", "24 Hours"},
                {"Bank of India", "No.445, Post Box, 26, Katpadi Rd, Katpadi", "Hours and services may differ"},
                {"Canara Bank", "No 10 TPG COMPLEX GROUND FLOOR, Arni Rd", "24 Hours"},
                {"HDFC Bank ATM", "No 1/71 Pillayar Koil St, Ambur, Thuthipet", "24 Hours"},
                {"ICICI Bank ATM", "Vellore Branch, 19-A, Officer's Line", "Hours and services may differ"},
                {"Indian Bank", "Vellore Bazaar, G.P.H. Road", "10.00 a.m - 4.00 p.m"},
                {"Karnataka Bank ATM", "Collector Office Circle, Sathuvachari", "24 Hours"},
                {"Kotak Mahindra Bank Ltd", "Bharat Petroleum Corporation Petrol Bunk, No.25, Officer's Line", "24 Hours"},
                {"Punjab National Bank ATM", "Mandi St, Balaji Nagar", "24 Hours"},
                {"SBI ATM", "Official Line, Next to Head Post Office", "24 Hours"},
                {"Tamilnadu Mercantile Bank", "7, Mandi St, Saidapet", "10.00 a.m - 4.30 p.m"},
                {"The Federal Bank ATM", "Dr. Padma Samarasam Complex, Arni Rd", "24 Hours"},
                {"VCCC Bank ATM", "1-2, Anna Salai, Sankaranpalayam", "24 Hours"}
            },
            new String [] {
                "BRANCH NAME", "ATM LOCATION", "OPEN HOURS"
            }
        ));
        atmTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                atmTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(atmTable);

        javax.swing.GroupLayout atmPanelLayout = new javax.swing.GroupLayout(atmPanel);
        atmPanel.setLayout(atmPanelLayout);
        atmPanelLayout.setHorizontalGroup(
            atmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(atmPanelLayout.createSequentialGroup()
                .addGroup(atmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(atmPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(atmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(atmPanelLayout.createSequentialGroup()
                                .addGroup(atmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(atmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(atmAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel13))
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(42, 42, 42))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, atmPanelLayout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(atmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(atmDeleteButton)
                            .addComponent(aaField, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                            .addComponent(ahField)
                            .addComponent(anField)))
                    .addGroup(atmPanelLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(atmUpdateButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        atmPanelLayout.setVerticalGroup(
            atmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(atmPanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(atmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(atmPanelLayout.createSequentialGroup()
                        .addGroup(atmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(anField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(atmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(aaField, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(atmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(ahField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)
                        .addGroup(atmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(atmDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(atmAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(atmUpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(168, Short.MAX_VALUE))
        );

        collegePanel.setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel1.setText("College Name:");

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel2.setText("Collge Website Link:");

        cnField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        cwField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel3.setText("College Address:");

        caField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        collegeDeleteButton.setBackground(new java.awt.Color(255, 0, 0));
        collegeDeleteButton.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        collegeDeleteButton.setText("DELETE");
        collegeDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                collegeDeleteButtonActionPerformed(evt);
            }
        });

        collegeAddButton.setBackground(new java.awt.Color(0, 255, 102));
        collegeAddButton.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        collegeAddButton.setText("ADD");
        collegeAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                collegeAddButtonActionPerformed(evt);
            }
        });

        collegeUpdateButton.setBackground(new java.awt.Color(255, 255, 0));
        collegeUpdateButton.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        collegeUpdateButton.setText("UPDATE");
        collegeUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                collegeUpdateButtonActionPerformed(evt);
            }
        });

        collegeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Vellore Institute of Technology", "VIT, Vellore Campus, Tiruvalam Rd, Katpadi, Vellore, Tamil Nadu 632014", "https://vit.ac.in/"},
                {"Christian Medical College", "IDA Scudder Rd, Vellore, Tamil Nadu 632004", "https://www.cmch-vellore.edu/"},
                {"Thiruvalluvar University", "Serkadu, TamilNadu 632115", "https://www.tvu.edu.in/"},
                {"C. Abdul Hakeem College of Engineering & Technology", "MelVisharam, Vellore District, TamilNadu 632509", "https://cancet.in/en/"}
            },
            new String [] {
                "NAME", "LOCATION", "WEBSITE"
            }
        ));
        collegeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                collegeTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(collegeTable);

        javax.swing.GroupLayout collegePanelLayout = new javax.swing.GroupLayout(collegePanel);
        collegePanel.setLayout(collegePanelLayout);
        collegePanelLayout.setHorizontalGroup(
            collegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(collegePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(collegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addGroup(collegePanelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(collegeAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(collegePanelLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(collegeUpdateButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(collegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cnField, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(collegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cwField, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                        .addComponent(caField)
                        .addComponent(collegeDeleteButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );
        collegePanelLayout.setVerticalGroup(
            collegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(collegePanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(collegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(collegePanelLayout.createSequentialGroup()
                        .addGroup(collegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cnField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(collegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cwField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(collegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(collegePanelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3))
                            .addGroup(collegePanelLayout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(caField, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(47, 47, 47)
                        .addGroup(collegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(collegeAddButton, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                            .addComponent(collegeDeleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(collegeUpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(202, Short.MAX_VALUE))
        );

        libraryPanel.setBackground(new java.awt.Color(204, 204, 255));

        jLabel31.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel31.setText("Name of the Library:");

        jLabel33.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel33.setText("Location of the Library:");

        jLabel34.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel34.setText("Library Timings:");

        lnField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        laField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        libDeleteButton.setBackground(new java.awt.Color(255, 51, 0));
        libDeleteButton.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        libDeleteButton.setText("DELETE");
        libDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                libDeleteButtonActionPerformed(evt);
            }
        });

        libAddButton.setBackground(new java.awt.Color(0, 255, 0));
        libAddButton.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        libAddButton.setText("ADD");
        libAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                libAddButtonActionPerformed(evt);
            }
        });

        libUpdateButton.setBackground(new java.awt.Color(255, 255, 0));
        libUpdateButton.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        libUpdateButton.setText("UPDATE");
        libUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                libUpdateButtonActionPerformed(evt);
            }
        });

        ltField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        libraryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Periyar Central Library", "Sh 59, Vit University, Vellore - 632014", "7.30AM-12.30AM"},
                {"Thanthai Periyar EVR District Central Library", "No1, Vasanthapuram, Infantry Road, Vellore - 632001", "9.00AM-8.00PM"},
                {"District Central Library", "9,Arni Road, Vasanthapuram, Kosapet, Vellore - 632001", "8.00AM-8.00PM"},
                {"Dr. Ambedkar Library", "Shenbakkam, Vellore - 632008", "9.00AM-4.00PM"}
            },
            new String [] {
                "NAME", "LOCATION", "TIMINGS"
            }
        ));
        libraryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                libraryTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(libraryTable);

        javax.swing.GroupLayout libraryPanelLayout = new javax.swing.GroupLayout(libraryPanel);
        libraryPanel.setLayout(libraryPanelLayout);
        libraryPanelLayout.setHorizontalGroup(
            libraryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(libraryPanelLayout.createSequentialGroup()
                .addGroup(libraryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(libraryPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(libraryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33)
                            .addComponent(jLabel31)
                            .addGroup(libraryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(libAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel34)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(libraryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lnField)
                            .addComponent(laField)
                            .addComponent(libDeleteButton)
                            .addComponent(ltField, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)))
                    .addGroup(libraryPanelLayout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(libUpdateButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(93, Short.MAX_VALUE))
        );
        libraryPanelLayout.setVerticalGroup(
            libraryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(libraryPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(libraryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(libraryPanelLayout.createSequentialGroup()
                        .addGroup(libraryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31)
                            .addComponent(lnField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(libraryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33)
                            .addComponent(laField, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(libraryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel34)
                            .addComponent(ltField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(libraryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(libDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(libAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(libUpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(150, Short.MAX_VALUE))
        );

        b4.setBackground(new java.awt.Color(255, 204, 204));

        jLabel14.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel14.setText("Name of the Hotel:");

        jLabel15.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel15.setText("Location of the Hotel:");

        jLabel16.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel16.setText("Price Range from:");

        hotelname.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        hotelname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotelnameActionPerformed(evt);
            }
        });

        hotelloc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        AddhotelButton.setBackground(new java.awt.Color(0, 255, 102));
        AddhotelButton.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        AddhotelButton.setText("ADD");
        AddhotelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddhotelButtonActionPerformed(evt);
            }
        });

        DeletehotelButton.setBackground(new java.awt.Color(255, 51, 0));
        DeletehotelButton.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        DeletehotelButton.setText("DELETE");
        DeletehotelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletehotelButtonActionPerformed(evt);
            }
        });

        UpdatehotelButton.setBackground(new java.awt.Color(255, 255, 0));
        UpdatehotelButton.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        UpdatehotelButton.setText("UPDATE");
        UpdatehotelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdatehotelButtonActionPerformed(evt);
            }
        });

        hoteltable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Fortune Park Vellore", "Roundtana, Gandhi Nagar"},
                {"Regency Sameera Vellore by GRT Hotels", "Green Circle, by-pass road"},
                {"Benzz Park", "Katpadi Road (Old National Theatre)"},
                {"Treebo Trend Kingsbury Fiesta Vellore", "Near Galaxy Cinemas, Old Katpadi"},
                {"Hotel SMS Grand Inn", "Near Collector Office, Sathuvachari"},
                {"SPOT ON 63901 Prince Residency", "New String Bazaar, Old Bus Stand"},
                {"Arihanth Inn", "Kagidhapatarai, Near Chennai Silks"},
                {"Khanna Fiesta", "Anna Salai "},
                {"Rangalaya Royal", "Vellore-Chitoor Road, Gandhinagar"}
            },
            new String [] {
                "HOTEL NAME", "LOCATION"
            }
        ));
        hoteltable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hoteltableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(hoteltable);

        priceField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceFieldActionPerformed(evt);
            }
        });
        priceField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                priceFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout b4Layout = new javax.swing.GroupLayout(b4);
        b4.setLayout(b4Layout);
        b4Layout.setHorizontalGroup(
            b4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(b4Layout.createSequentialGroup()
                .addGroup(b4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(b4Layout.createSequentialGroup()
                        .addGroup(b4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(b4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(b4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel16)))
                            .addGroup(b4Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(AddhotelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(b4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DeletehotelButton)
                            .addGroup(b4Layout.createSequentialGroup()
                                .addGroup(b4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(hotelname, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                                    .addComponent(hotelloc, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                                    .addComponent(priceField))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(b4Layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(UpdatehotelButton)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        b4Layout.setVerticalGroup(
            b4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(b4Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(b4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(b4Layout.createSequentialGroup()
                        .addGroup(b4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hotelname, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(b4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hotelloc, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addGap(18, 18, 18)
                        .addGroup(b4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(62, 62, 62)
                        .addGroup(b4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(DeletehotelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AddhotelButton, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(UpdatehotelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(129, Short.MAX_VALUE))
        );

        b5.setBackground(new java.awt.Color(255, 255, 204));

        jLabel17.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel17.setText("Type of the Hospital:");

        jLabel18.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel18.setText("Name of the Hospital:");

        jLabel19.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel19.setText("Location of the Hospital:");

        jLabel20.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel20.setText("Contact Number:");

        hospital_type.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        hospital_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Government", "Private" }));

        hospitalname.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        hospitalLocation.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        hospital_num.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        hospital_num.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                hospital_numKeyTyped(evt);
            }
        });

        AddhospitalButton.setBackground(new java.awt.Color(0, 255, 51));
        AddhospitalButton.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        AddhospitalButton.setText("ADD");
        AddhospitalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddhospitalButtonActionPerformed(evt);
            }
        });

        DeletehospitalButton.setBackground(new java.awt.Color(255, 51, 0));
        DeletehospitalButton.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        DeletehospitalButton.setText("DELETE");
        DeletehospitalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletehospitalButtonActionPerformed(evt);
            }
        });

        UpdatehospitalButton.setBackground(new java.awt.Color(255, 255, 0));
        UpdatehospitalButton.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        UpdatehospitalButton.setText("UPDATE");
        UpdatehospitalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdatehospitalButtonActionPerformed(evt);
            }
        });

        hospitaltable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Vellore Medical College And Hospital", "Adukkamparai, Arani Road", "0416 226 0900"},
                {"Sri Narayani Hospital & Research Centre", "Azad Rd, Thirumalaikodi", "0416 220 6300"},
                {"Christian Medical College ", "Katpadi Road", "0416 228 1000"},
                {"Apollo KH Hospital", "Melvisharam, Ranipet", "04172 269 581"},
                {"Government Vellore Medical College", "Sapthalipuram, Pennathur", "0416 226 0900"},
                {"Arun Hospital Ortho & Trauma Care - Sai Srishti wom", "Thiyagarajapuram Rd, Veerasamy Nagar", "0416 223 4217"},
                {"NARUVI Hospital", "Opposite Vellore New Bus Stand, Thottapalayam", "087540 16970"},
                {"Nalam Medical Centre and Hospital", "Phase 2, Sathuvachari", "0416 225 4461"},
                {"Apollo Diagnostics", "Sathuvachari", "096299 42784"},
                {"Annamalai Hospital", "Velapadi", "0416 222 4770"},
                {"Government Pentland Hospital", "Kosapet", "096353 59141"}
            },
            new String [] {
                "HOSPITAL NAME", "LOCATION", "CONTACT NUMBER"
            }
        ));
        hospitaltable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hospitaltableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(hospitaltable);

        javax.swing.GroupLayout b5Layout = new javax.swing.GroupLayout(b5);
        b5.setLayout(b5Layout);
        b5Layout.setHorizontalGroup(
            b5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(b5Layout.createSequentialGroup()
                .addGroup(b5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(b5Layout.createSequentialGroup()
                        .addGroup(b5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(b5Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(b5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(b5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(b5Layout.createSequentialGroup()
                                            .addGroup(b5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel17)
                                                .addComponent(jLabel18))
                                            .addGap(37, 37, 37))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, b5Layout.createSequentialGroup()
                                            .addComponent(jLabel19)
                                            .addGap(18, 18, 18)))
                                    .addGroup(b5Layout.createSequentialGroup()
                                        .addComponent(jLabel20)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))))
                            .addGroup(b5Layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(AddhospitalButton)))
                        .addGroup(b5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(hospitalname)
                            .addComponent(hospital_type, 0, 159, Short.MAX_VALUE)
                            .addComponent(hospitalLocation)
                            .addComponent(hospital_num)
                            .addComponent(DeletehospitalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(b5Layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(UpdatehospitalButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        b5Layout.setVerticalGroup(
            b5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(b5Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(b5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(b5Layout.createSequentialGroup()
                        .addGroup(b5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(hospital_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(b5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel18)
                            .addComponent(hospitalname, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(b5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hospitalLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addGap(18, 18, 18)
                        .addGroup(b5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hospital_num, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20)))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(b5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(AddhospitalButton, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                    .addComponent(DeletehospitalButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(UpdatehospitalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(130, Short.MAX_VALUE))
        );

        b6.setBackground(new java.awt.Color(204, 255, 204));

        jLabel21.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel21.setText("Name of the Travel Agency:");

        jLabel22.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel22.setText("Contact Number:");

        nameField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        numField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        numField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                numFieldKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numFieldKeyTyped(evt);
            }
        });

        travelAddButton.setBackground(new java.awt.Color(51, 255, 51));
        travelAddButton.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        travelAddButton.setText("ADD");
        travelAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                travelAddButtonActionPerformed(evt);
            }
        });

        travelDeleteButton.setBackground(new java.awt.Color(255, 0, 0));
        travelDeleteButton.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        travelDeleteButton.setText("DELETE");
        travelDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                travelDeleteButtonActionPerformed(evt);
            }
        });

        travelUpdateButton.setBackground(new java.awt.Color(255, 255, 0));
        travelUpdateButton.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        travelUpdateButton.setText("UPDATE");
        travelUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                travelUpdateButtonActionPerformed(evt);
            }
        });

        traveltable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Vellore Yatra tours and travels", "078670 00777", null},
                {"AR Tours and Travels", "098944 99554", null},
                {"GEETHANJALI Tours & Travels", "0416 222 7491", null},
                {"Vellore Travels", "099447 83578", null},
                {"SHRI KRISHNA TRAVELS", "0416 420 0696", null},
                {"India Tours & Travels", "0416 420 4435", null},
                {"Flamigo Travels", "075027 72727", null},
                {"Sri Sabari Tours & Travels", "090431 11430", null},
                {"Kailash Tour and Travel", "097870 75135", null},
                {"Om Sakthi Travels", "099449 28489", null}
            },
            new String [] {
                "TRAVEL AGENCY NAME", "CONTACT NUMBER", "RATING"
            }
        ));
        traveltable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                traveltableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(traveltable);

        jLabel4.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel4.setText("Rating");

        rating.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ratingKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout b6Layout = new javax.swing.GroupLayout(b6);
        b6.setLayout(b6Layout);
        b6Layout.setHorizontalGroup(
            b6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(b6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(b6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(b6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(travelUpdateButton)
                        .addGroup(b6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addGroup(b6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(travelAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(b6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nameField, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                    .addComponent(numField)
                    .addComponent(travelDeleteButton)
                    .addComponent(rating))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(170, Short.MAX_VALUE))
        );
        b6Layout.setVerticalGroup(
            b6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(b6Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(b6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(b6Layout.createSequentialGroup()
                        .addGroup(b6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(b6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(numField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(b6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(rating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(b6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(b6Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(travelAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(b6Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(travelDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(travelUpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(124, Short.MAX_VALUE))
        );

        manageUsersPanel.setBackground(new java.awt.Color(255, 204, 102));

        jLabel23.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel23.setText("Name of the User:");

        jLabel24.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel24.setText("Username:");

        jLabel25.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel25.setText("Password:");

        jLabel26.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel26.setText("Type of the User:");

        MUAddButton.setBackground(new java.awt.Color(0, 255, 0));
        MUAddButton.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        MUAddButton.setText("ADD");
        MUAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MUAddButtonActionPerformed(evt);
            }
        });

        MUUpdateButton.setBackground(new java.awt.Color(255, 255, 0));
        MUUpdateButton.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        MUUpdateButton.setText("UPDATE");
        MUUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MUUpdateButtonActionPerformed(evt);
            }
        });

        userNameField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        mailField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        passwordField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        userType.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        userType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Student", "Tourist" }));

        MUDeleteButton.setBackground(new java.awt.Color(255, 0, 0));
        MUDeleteButton.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        MUDeleteButton.setText("DELETE");
        MUDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MUDeleteButtonActionPerformed(evt);
            }
        });

        usersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Shivashree A R", "shivashreea.r2019@vitstudent.ac.in", "shiva2001"},
                {"Srilakshmi S", "srilakshmi.s2019@vitstudent.ac.in", "sri2001"},
                {"Jothika K", "jothika.k2019@vitstudent.ac.in", "jo2001"},
                {"Sara", "sara1971@gmail.com", "sara11"},
                {"Rahul M", "rahul.m67@gmail.com", "rahulm76"}
            },
            new String [] {
                "UserName", "Mail Id", "User Type"
            }
        ));
        usersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usersTableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(usersTable);

        javax.swing.GroupLayout manageUsersPanelLayout = new javax.swing.GroupLayout(manageUsersPanel);
        manageUsersPanel.setLayout(manageUsersPanelLayout);
        manageUsersPanelLayout.setHorizontalGroup(
            manageUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageUsersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(manageUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manageUsersPanelLayout.createSequentialGroup()
                        .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                        .addGap(704, 704, 704))
                    .addGroup(manageUsersPanelLayout.createSequentialGroup()
                        .addGroup(manageUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(manageUsersPanelLayout.createSequentialGroup()
                                .addGroup(manageUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel23)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel26)
                                    .addGroup(manageUsersPanelLayout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(MUAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(36, 36, 36)
                                .addGroup(manageUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(manageUsersPanelLayout.createSequentialGroup()
                                        .addGroup(manageUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(userNameField)
                                            .addComponent(mailField)
                                            .addComponent(passwordField, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                                            .addComponent(userType, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(MUDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(manageUsersPanelLayout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(MUUpdateButton)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        manageUsersPanelLayout.setVerticalGroup(
            manageUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageUsersPanelLayout.createSequentialGroup()
                .addGroup(manageUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manageUsersPanelLayout.createSequentialGroup()
                        .addGroup(manageUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(manageUsersPanelLayout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(jLabel23))
                            .addGroup(manageUsersPanelLayout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(userNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(manageUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(mailField, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(manageUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(manageUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(userType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, manageUsersPanelLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40)
                .addGroup(manageUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MUAddButton, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(MUDeleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(MUUpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(107, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(collegePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(libraryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(atmPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(b4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(b5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(b6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(manageUsersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(collegePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(libraryPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(atmPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(b4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(b5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(b6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(manageUsersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
    
    private void a1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a1MouseClicked
        collegePanel.setVisible(true);
        updateCollegeTable();
        libraryPanel.setVisible(false);
        atmPanel.setVisible(false);
        b4.setVisible(false);
        b5.setVisible(false);
        b6.setVisible(false);
        manageUsersPanel.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_a1MouseClicked

    private void a2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a2MouseClicked
        libraryPanel.setVisible(true);
        updateLibraryTable();
        collegePanel.setVisible(false);
        atmPanel.setVisible(false);
        b4.setVisible(false);
        b5.setVisible(false);
        b6.setVisible(false);
        manageUsersPanel.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_a2MouseClicked

    private void a3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a3MouseClicked
        atmPanel.setVisible(true);
        updateAtmTable();
        libraryPanel.setVisible(false);
        collegePanel.setVisible(false);
        b4.setVisible(false);
        b5.setVisible(false);
        b6.setVisible(false);
        manageUsersPanel.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_a3MouseClicked

    private void updateManagehotelTable(){
        DefaultTableModel model = new DefaultTableModel();
        hoteltable.setModel(model);
        
        model.addColumn("Hotel Name");
        model.addColumn("Location");
        model.addColumn("Price");
        
       
        hoteltable.getColumnModel().getColumn(2).setMinWidth(0);
        hoteltable.getColumnModel().getColumn(2).setMaxWidth(0);
        
        try{
            Connection con = MyDatabase.connect();
            PreparedStatement stmt = con.prepareStatement("select * from hotel");
            ResultSet rs = stmt.executeQuery();
            
            while(rs.next()){
               model.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3)});
            }
        }
        catch(SQLException e){
            System.err.println(e);
        }
    }
    
    private void a4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a4MouseClicked
        b4.setVisible(true);
        updateManagehotelTable();
        libraryPanel.setVisible(false);
        atmPanel.setVisible(false);
        collegePanel.setVisible(false);
        b5.setVisible(false);
        b6.setVisible(false);
        manageUsersPanel.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_a4MouseClicked

    private void updateManagehospitalTable(){
        DefaultTableModel model = new DefaultTableModel();
        hospitaltable.setModel(model);
        
        model.addColumn("Type of Hospital");
        model.addColumn("Hospital Name");
        model.addColumn("Location");
        model.addColumn("Contact Number");
       
        hospitaltable.getColumnModel().getColumn(0).setMinWidth(0);
        hospitaltable.getColumnModel().getColumn(0).setMaxWidth(0);
        
        try{
            Connection con = MyDatabase.connect();
            PreparedStatement stmt = con.prepareStatement("select * from hospital");
            ResultSet rs = stmt.executeQuery();
            
            while(rs.next()){
               model.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
            }
        }
        catch(SQLException e){
            System.err.println(e);
        }
    }
    
    private void a5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a5MouseClicked
        b5.setVisible(true);
        updateManagehospitalTable();
        libraryPanel.setVisible(false);
        atmPanel.setVisible(false);
        b4.setVisible(false);
        collegePanel.setVisible(false);
        b6.setVisible(false);
        manageUsersPanel.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_a5MouseClicked
    private void updateManageTravelTable(){
        DefaultTableModel model = new DefaultTableModel();
        traveltable.setModel(model);
        
        model.addColumn("Name");
        model.addColumn("Contact Number");
        model.addColumn("Rating");

        
        
        try{
            Connection con = MyDatabase.connect();
            PreparedStatement stmt = con.prepareStatement("select * from travels");
            ResultSet rs = stmt.executeQuery();
            
            traveltable.getColumnModel().getColumn(2).setMinWidth(0);
            traveltable.getColumnModel().getColumn(2).setMaxWidth(0);
            while(rs.next()){
               model.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3)});
            }
        }
        catch(SQLException e){
            System.err.println(e);
        }
    }
    private void a6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a6MouseClicked
        b6.setVisible(true);
        updateManageTravelTable();
        libraryPanel.setVisible(false);
        atmPanel.setVisible(false);
        b4.setVisible(false);
        b5.setVisible(false);
        collegePanel.setVisible(false);
        manageUsersPanel.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_a6MouseClicked

    private void updateManageUsersTable(){
        DefaultTableModel model = new DefaultTableModel();
        usersTable.setModel(model);
        
        model.addColumn("Name");
        model.addColumn("Mail Id");
        model.addColumn("User Type");
        model.addColumn("password");
        
        usersTable.getColumnModel().getColumn(3).setMinWidth(0);
        usersTable.getColumnModel().getColumn(3).setMaxWidth(0);
        
        try{
            Connection con = MyDatabase.connect();
            PreparedStatement stmt = con.prepareStatement("select * from account");
            ResultSet rs = stmt.executeQuery();
            
            while(rs.next()){
               model.addRow(new Object[]{rs.getString(2),rs.getString(1),rs.getString(4),rs.getString(3)});
            }
        }
        catch(SQLException e){
            System.err.println(e);
        }
    }
    private void a7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a7MouseClicked
        manageUsersPanel.setVisible(true);
        updateManageUsersTable();
        
        libraryPanel.setVisible(false);
        atmPanel.setVisible(false);
        b4.setVisible(false);
        b5.setVisible(false);
        b6.setVisible(false);
        collegePanel.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_a7MouseClicked

    private void MUAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MUAddButtonActionPerformed
       String name = userNameField.getText();
       String mail = mailField.getText();
       String pass = passwordField.getText();
       String type = String.valueOf(userType.getSelectedItem());
       
       if(mail.length()==0 || name.length()==0 || pass.length()==0){
           JOptionPane.showMessageDialog(this, "Enter all fields");
           return;
       }
       
       else if(pass.length()<6 || pass.length()>20 ){
            JOptionPane.showMessageDialog(this, "Password length must be between 6 to 20");
            return;
       }   
      try{
            Connection con = MyDatabase.connect();
            
            PreparedStatement stmt = con.prepareStatement("insert into account values(?,?,?,?)");
            stmt.setString(1,mail);
            stmt.setString(2,name);
            stmt.setString(3,pass);
            stmt.setString(4,type);
            
            int r= stmt.executeUpdate();
            updateManageUsersTable();
            JOptionPane.showMessageDialog(this, "Succesfully added");
            
            userNameField.setText("");
            mailField.setText("");
            passwordField.setText("");
            
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(this, "User already added to database","Duplicate Entry",JOptionPane.ERROR_MESSAGE);
        }
       
    }//GEN-LAST:event_MUAddButtonActionPerformed

    private void MUDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MUDeleteButtonActionPerformed
        int r = usersTable.getSelectedRow();
        if(r!=-1){
        String mail = String.valueOf(usersTable.getValueAt(r,1));
        String type = String.valueOf(usersTable.getValueAt(r,2));
         try{
            Connection con = MyDatabase.connect();
            
            PreparedStatement stmt = con.prepareStatement("delete from account where mail = ? and user_type=?");
            stmt.setString(1,mail);
            stmt.setString(2,type);
            
            int rows = stmt.executeUpdate();
            
            updateManageUsersTable();
           
            userNameField.setText("");
            mailField.setText("");
            passwordField.setText("");
            
            JOptionPane.showMessageDialog(this, "Succesfully deleted");
        }
        catch(SQLException e){
            System.err.println(e);
        }
       
        }
        else{
            JOptionPane.showMessageDialog(this, "Please select an item from list","warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_MUDeleteButtonActionPerformed

    private void MUUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MUUpdateButtonActionPerformed
       int r = usersTable.getSelectedRow();
        if(r!=-1){
        String name = String.valueOf(usersTable.getValueAt(r,0));
        String mail = String.valueOf(usersTable.getValueAt(r,1));
        String type = String.valueOf(usersTable.getValueAt(r,2));
        String pass = String.valueOf(usersTable.getValueAt(r,3));
        
        int index=0;
        if(type.equals("Student"))
            index=0;
        else
            index=1;
        
        if(!mailField.getText().equals(mail)){
             JOptionPane.showMessageDialog(this, "Change in mail id is not permitted","warning",JOptionPane.WARNING_MESSAGE);
             return;
        }
        else if(userType.getSelectedIndex() != index){
            JOptionPane.showMessageDialog(this, "Change in user type is not permitted","warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        
         try{
            Connection con = MyDatabase.connect();
            
            PreparedStatement stmt = con.prepareStatement("update account set name=? , password=?  where mail = ? and user_type=?");
            
            stmt.setString(1,userNameField.getText());
            stmt.setString(2,passwordField.getText());
            stmt.setString(3,mail);
            stmt.setString(4,type);
            int rows = stmt.executeUpdate();
            
            updateManageUsersTable();
            JOptionPane.showMessageDialog(this, "Succesfully updated");
            
            userNameField.setText("");
            mailField.setText("");
            passwordField.setText("");
            
        }
        catch(SQLException e){
            System.err.println(e);
        }
       
      }
      else{
         JOptionPane.showMessageDialog(this, "Please select an item from list","warning",JOptionPane.WARNING_MESSAGE);
       }
    }//GEN-LAST:event_MUUpdateButtonActionPerformed

    private void usersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usersTableMouseClicked
        int r= usersTable.getSelectedRow ();
        String name = String.valueOf(usersTable.getValueAt(r, 0));
        String mail = String.valueOf(usersTable.getValueAt(r, 1));
        String type = String.valueOf(usersTable.getValueAt(r, 2)); 
        String pass = String.valueOf(usersTable.getValueAt(r, 3));
        userNameField.setText (name); 
        mailField.setText (mail); 
        passwordField.setText (pass);
        if (type.equals ("Student")) 
            userType.setSelectedIndex (0) ;
        else
            userType.setSelectedIndex (1);
    }//GEN-LAST:event_usersTableMouseClicked

    private void travelAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_travelAddButtonActionPerformed
        String name = nameField.getText();
       String num = numField.getText();
       String rate = rating.getText();
       
       if(name.length()==0 || num.length()==0 || rate.length()==0){
           JOptionPane.showMessageDialog(this, "Enter all fields");
           return;
       }
       if(num.length()< 10 || num.length()>10){
           JOptionPane.showMessageDialog(this, "Invalid Contact");
           return;
       }
       
       
      try{
            Connection con = MyDatabase.connect();
            
            PreparedStatement stmt = con.prepareStatement("insert into travels values(?,?,?)");
            stmt.setString(1,name);
            stmt.setString(2,num);
            stmt.setString(3,rate);
            
            int r= stmt.executeUpdate();
            updateManageTravelTable();
            JOptionPane.showMessageDialog(this, "Succesfully added");
            
            nameField.setText("");
            numField.setText("");
            rating.setText("");
            
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(this, "User already added to database","Duplicate Entry",JOptionPane.ERROR_MESSAGE);
        }
       
    }//GEN-LAST:event_travelAddButtonActionPerformed

    private void travelDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_travelDeleteButtonActionPerformed
        int r = traveltable.getSelectedRow();
        if(r!=-1){
        String num = String.valueOf(traveltable.getValueAt(r,1));
       
         try{
            Connection con = MyDatabase.connect();
            
            PreparedStatement stmt = con.prepareStatement("delete from travels where contact_number = ?");
            stmt.setString(1,num);
            
            
            int rows = stmt.executeUpdate();
            
            updateManageTravelTable();
           
            nameField.setText("");
            numField.setText("");
            rating.setText("");
            
            
            JOptionPane.showMessageDialog(this, "Succesfully deleted");
        }
        catch(SQLException e){
            System.err.println(e);
        }
       
        }
        else{
            JOptionPane.showMessageDialog(this, "Please select an item from list","warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_travelDeleteButtonActionPerformed

    private void travelUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_travelUpdateButtonActionPerformed
        int r = traveltable.getSelectedRow();
        if(r!=-1){
         String name = String.valueOf(traveltable.getValueAt(r,0));
        String num = String.valueOf(traveltable.getValueAt(r,1));
         String rate = String.valueOf(traveltable.getValueAt(r,2));
      
        if(!numField.getText().equals(num)){
             JOptionPane.showMessageDialog(this, "Change in contact number is not permitted","warning",JOptionPane.WARNING_MESSAGE);
             return;
        }
        
         try{
            Connection con = MyDatabase.connect();
            
            PreparedStatement stmt = con.prepareStatement("update travels set name=?,rating=?  where contact_number = ?");
            
            stmt.setString(1,nameField.getText());
            stmt.setString(2,rating.getText());
           
            stmt.setString(3,num);
            
            int rows = stmt.executeUpdate();
            
            updateManageTravelTable();
            JOptionPane.showMessageDialog(this, "Succesfully updated");
            
            nameField.setText("");
            numField.setText("");
            rating.setText("");
            
        }
        catch(SQLException e){
            System.err.println(e);
        }
       
      }
      else{
         JOptionPane.showMessageDialog(this, "Please select an item from list","warning",JOptionPane.WARNING_MESSAGE);
       }
    }//GEN-LAST:event_travelUpdateButtonActionPerformed

    private void traveltableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_traveltableMouseClicked
        int r= traveltable.getSelectedRow ();
        String name = String.valueOf(traveltable.getValueAt(r, 0));
        String num = String.valueOf(traveltable.getValueAt(r, 1));
        String rate = String.valueOf(traveltable.getValueAt(r, 2));
        nameField.setText(name); 
        numField.setText(num); 
        rating.setText(rate);
    }//GEN-LAST:event_traveltableMouseClicked

    private void AddhotelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddhotelButtonActionPerformed
       String name = hotelname.getText();
       String location = hotelloc.getText();
       String price = String.valueOf(priceField.getText());
       
       
       if(name.length()==0 || location.length()==0 ){
           JOptionPane.showMessageDialog(this, "Enter all fields");
           return;
       }
       if(price.length() == 0){
          JOptionPane.showMessageDialog(this, "Price can't be Empty");
           return; 
       }
       
      try{
            Connection con = MyDatabase.connect();
            
            PreparedStatement stmt = con.prepareStatement("insert into hotel values(?,?,?)");
            stmt.setString(1,name);
            stmt.setString(2,location);
            stmt.setString(3,price);
            
            
            int r= stmt.executeUpdate();
            updateManagehotelTable();
            JOptionPane.showMessageDialog(this, "Succesfully added");
            
            hotelname.setText(" ");
            hotelloc.setText(" ");
            priceField.setText(" ");
            
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(this, "User already added to database","Duplicate Entry",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_AddhotelButtonActionPerformed

    private void hospitaltableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hospitaltableMouseClicked
        int r= hospitaltable.getSelectedRow ();
        String type = String.valueOf(hospitaltable.getValueAt(r, 0));
        String name = String.valueOf(hospitaltable.getValueAt(r, 1));
        String location = String.valueOf(hospitaltable.getValueAt(r, 2)); 
        String num = String.valueOf(hospitaltable.getValueAt(r, 3));
        hospitalname.setText (name); 
        hospitalLocation.setText (location); 
        hospital_num.setText(num);
        if (type.equals ("Government")) 
            hospital_type.setSelectedIndex (0) ;
        else
            hospital_type.setSelectedIndex (1);
    }//GEN-LAST:event_hospitaltableMouseClicked

    private void AddhospitalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddhospitalButtonActionPerformed
       String type = String.valueOf(hospital_type.getSelectedItem());
       String name = hospitalname.getText();
       String location = hospitalLocation.getText();
       String num = hospital_num.getText();
       
       if(name.length()==0 || location.length()==0 || num.length()==0){
           JOptionPane.showMessageDialog(this, "Enter all fields");
           return;
       }
       if(num.length()< 10 || num.length()>10){
           JOptionPane.showMessageDialog(this, "Invalid Contact");
           return;
       }
      try{
            Connection con = MyDatabase.connect();
            
            PreparedStatement stmt = con.prepareStatement("insert into hospital values(?,?,?,?)");
            stmt.setString(1,type);
            stmt.setString(2,name);
            stmt.setString(3,location);
            stmt.setString(4,num);
            
            int r= stmt.executeUpdate();
            updateManagehospitalTable();
            JOptionPane.showMessageDialog(this, "Succesfully added");
            
            
            hospitalname.setText(" ");
            hospitalLocation.setText(" ");
            hospital_num.setText(" ");
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(this, "User already added to database","Duplicate Entry",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_AddhospitalButtonActionPerformed

    private void DeletehospitalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletehospitalButtonActionPerformed
        int r = hospitaltable.getSelectedRow();
        if(r!=-1){
        String type = String.valueOf(hospitaltable.getValueAt(r,0));
        String num = String.valueOf(hospitaltable.getValueAt(r,3));
         try{
            Connection con = MyDatabase.connect();
            
            PreparedStatement stmt = con.prepareStatement("delete from hospital where type_hosp = ? and contact_number=?");
            stmt.setString(1,type);
            stmt.setString(2,num);
            
            int rows = stmt.executeUpdate();
            
            updateManagehospitalTable();
           
            hospitalname.setText("");
            hospitalLocation.setText("");
            hospital_num.setText("");
            
            JOptionPane.showMessageDialog(this, "Succesfully deleted");
        }
        catch(SQLException e){
            System.err.println(e);
        }
       
        }
        else{
            JOptionPane.showMessageDialog(this, "Please select an item from list","warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_DeletehospitalButtonActionPerformed

    private void UpdatehospitalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdatehospitalButtonActionPerformed
        int r = hospitaltable.getSelectedRow();
        if(r!=-1){
        String type = String.valueOf(hospitaltable.getValueAt(r,0));
        String name = String.valueOf(hospitaltable.getValueAt(r,1));
        String location = String.valueOf(hospitaltable.getValueAt(r,2));
        String num = String.valueOf(hospitaltable.getValueAt(r,3));
        
        int index=0;
        if(type.equals("Government"))
            index=0;
        else
            index=1;
        
        if(!hospital_num.getText().equals(num)){
             JOptionPane.showMessageDialog(this, "Change in Contact number is not permitted","warning",JOptionPane.WARNING_MESSAGE);
             return;
        }
        else if(hospital_type.getSelectedIndex() != index){
            JOptionPane.showMessageDialog(this, "Change in type of hospital is not permitted","warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        
         try{
            Connection con = MyDatabase.connect();
            
            PreparedStatement stmt = con.prepareStatement("update hospital set name=? , location=?  where type_hosp = ? and contact_number=?");
            
            stmt.setString(1,hospitalname.getText());
            stmt.setString(2,hospitalLocation.getText());
            stmt.setString(3,type);
            stmt.setString(4,num);
            int rows = stmt.executeUpdate();
            
            updateManagehospitalTable();
            JOptionPane.showMessageDialog(this, "Succesfully updated");
            
            hospitalname.setText(" ");
            hospitalLocation.setText(" ");
            hospital_num.setText(" ");
            
        }
        catch(SQLException e){
            System.err.println(e);
        }
       
      }
      else{
         JOptionPane.showMessageDialog(this, "Please select an item from list","warning",JOptionPane.WARNING_MESSAGE);
       }
    }//GEN-LAST:event_UpdatehospitalButtonActionPerformed

    private void priceFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceFieldActionPerformed

    private void collegeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_collegeTableMouseClicked
        int r= collegeTable.getSelectedRow ();
        String name = String.valueOf(collegeTable.getValueAt(r, 0));
        String location = String.valueOf(collegeTable.getValueAt(r, 1));
        String website = String.valueOf(collegeTable.getValueAt(r, 2)); 
       
        cnField.setText (name); 
        caField.setText (location); 
        cwField.setText (website);
       
    }//GEN-LAST:event_collegeTableMouseClicked

     private void updateCollegeTable(){
        DefaultTableModel model = new DefaultTableModel();
        collegeTable.setModel(model);
        
        model.addColumn("Name");
        model.addColumn("Location");
        model.addColumn("Website");
        
        try{
            Connection con = MyDatabase.connect();
            PreparedStatement stmt = con.prepareStatement("select * from college");
            ResultSet rs = stmt.executeQuery();
            
            while(rs.next()){
               model.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3)});
            }
        }
        catch(SQLException e){
            System.err.println(e);
        }
    }
     
    private void collegeAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_collegeAddButtonActionPerformed
        String name = cnField.getText();
       String address = caField.getText();
       String website = cwField.getText();
      
       
       if(name.length()==0 || address.length()==0 || website.length()==0){
           JOptionPane.showMessageDialog(this, "Enter all fields");
           return;
       }
      try{
            Connection con = MyDatabase.connect();
            
            PreparedStatement stmt = con.prepareStatement("insert into college values(?,?,?)");
            stmt.setString(1,name);
            stmt.setString(2,address);
            stmt.setString(3,website);
           
            int r= stmt.executeUpdate();
            updateCollegeTable();
            JOptionPane.showMessageDialog(this, "Succesfully added");
            
            cnField.setText(" ");
            caField.setText(" ");
            cwField.setText(" ");
            
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(this, "College already added to database","Duplicate Entry",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_collegeAddButtonActionPerformed

    private void collegeDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_collegeDeleteButtonActionPerformed
         int r= collegeTable.getSelectedRow ();
        
        if(r!=-1){
        String name = String.valueOf(collegeTable.getValueAt(r, 0));
        String location = String.valueOf(collegeTable.getValueAt(r, 1));
        String website = String.valueOf(collegeTable.getValueAt(r, 2));
         try{
            Connection con = MyDatabase.connect();
            
            PreparedStatement stmt = con.prepareStatement("delete from college where name = ? ");
            stmt.setString(1,name);
            
            int rows = stmt.executeUpdate();
            
            updateCollegeTable();
           
            cnField.setText("");
            caField.setText("");
            cwField.setText("");
            
            JOptionPane.showMessageDialog(this, "Succesfully deleted");
        }
        catch(SQLException e){
            System.err.println(e);
        }
       
        }
        else{
            JOptionPane.showMessageDialog(this, "Please select an item from list","warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_collegeDeleteButtonActionPerformed

    private void collegeUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_collegeUpdateButtonActionPerformed
        int r= collegeTable.getSelectedRow ();
        
        if(r!=-1){
         String name = String.valueOf(collegeTable.getValueAt(r, 0));
        String location = String.valueOf(collegeTable.getValueAt(r, 1));
        String website = String.valueOf(collegeTable.getValueAt(r, 2)); 
        
        if(!cnField.getText().equals(name)){
             JOptionPane.showMessageDialog(this, "Change in name is not permitted","warning",JOptionPane.WARNING_MESSAGE);
             return;
        }
         try{
            Connection con = MyDatabase.connect();
            
            PreparedStatement stmt = con.prepareStatement("update college set location=? , website=?  where name = ?");
            
            stmt.setString(1,caField.getText());
            stmt.setString(2,cwField.getText());
            stmt.setString(3,name);
           
            int rows = stmt.executeUpdate();
            
            updateCollegeTable();
            JOptionPane.showMessageDialog(this, "Succesfully updated");
            
            cnField.setText(" ");
            caField.setText(" ");
            cwField.setText(" ");
            
        }
        catch(SQLException e){
            System.err.println(e);
        }
       
      }
      else{
         JOptionPane.showMessageDialog(this, "Please select an item from list","warning",JOptionPane.WARNING_MESSAGE);
       }
    }//GEN-LAST:event_collegeUpdateButtonActionPerformed

    private void updateAtmTable(){
        DefaultTableModel model = new DefaultTableModel();
        atmTable.setModel(model);
        
        model.addColumn("Branch Name");
        model.addColumn("Location");
        model.addColumn("Open Hours");
        
        
        try{
            Connection con = MyDatabase.connect();
            PreparedStatement stmt = con.prepareStatement("select * from atm");
            ResultSet rs = stmt.executeQuery();
            
            while(rs.next()){
               model.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3)});
            }
        }
        catch(SQLException e){
            System.err.println(e);
        }
    }
    private void atmTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_atmTableMouseClicked
        int r= atmTable.getSelectedRow ();
        String name = String.valueOf(atmTable.getValueAt(r, 0));
        String location = String.valueOf(atmTable.getValueAt(r, 1));
        String hours = String.valueOf(atmTable.getValueAt(r, 2)); 
       
        anField.setText (name); 
        aaField.setText (location); 
        ahField.setText (hours);
    }//GEN-LAST:event_atmTableMouseClicked

    private void atmAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atmAddButtonActionPerformed
       String name = anField.getText();
       String location = aaField.getText();
       String hours = ahField.getText();
     
       if(name.length()==0 || location.length()==0 || hours.length()==0){
           JOptionPane.showMessageDialog(this, "Enter all fields");
           return;
       }
      try{
            Connection con = MyDatabase.connect();
            
            PreparedStatement stmt = con.prepareStatement("insert into atm values(?,?,?)");
            stmt.setString(1,name);
            stmt.setString(2,location);
            stmt.setString(3,hours);
            
            int r= stmt.executeUpdate();
            updateAtmTable();
            JOptionPane.showMessageDialog(this, "Succesfully added");
            anField.setText(" ");
            aaField.setText(" ");
            ahField.setText(" ");
            
            
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(this, "Atm already added to database","Duplicate Entry",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_atmAddButtonActionPerformed

    private void atmDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atmDeleteButtonActionPerformed
        int r= atmTable.getSelectedRow ();
        
        if(r!=-1){
        String name = String.valueOf(atmTable.getValueAt(r, 0));
        String location = String.valueOf(atmTable.getValueAt(r, 1));
         try{
            Connection con = MyDatabase.connect();
            
            PreparedStatement stmt = con.prepareStatement("delete from atm where name = ? and location=?");
            stmt.setString(1,name);
            stmt.setString(2,location);
            
            int rows = stmt.executeUpdate();
            
            updateAtmTable();
           
            anField.setText("");
            aaField.setText("");
            ahField.setText("");
            
            JOptionPane.showMessageDialog(this, "Succesfully deleted");
        }
        catch(SQLException e){
            System.err.println(e);
        }
       
        }
        else{
            JOptionPane.showMessageDialog(this, "Please select an item from list","warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_atmDeleteButtonActionPerformed

    private void atmUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atmUpdateButtonActionPerformed
        int r= atmTable.getSelectedRow ();
       
        if(r!=-1){
        String name = String.valueOf(atmTable.getValueAt(r, 0));
        String location = String.valueOf(atmTable.getValueAt(r, 1));
        String hours = String.valueOf(atmTable.getValueAt(r, 2)); 
         
        if(!anField.getText().equals(name)){
             JOptionPane.showMessageDialog(this, "Change in Branch Name is not permitted","warning",JOptionPane.WARNING_MESSAGE);
             return;
        }
        else if(!aaField.getText().equals(location)){
            JOptionPane.showMessageDialog(this, "Change in Bank Address is not permitted","warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        
         try{
            Connection con = MyDatabase.connect();
            
            PreparedStatement stmt = con.prepareStatement("update atm set hours=?   where name = ? and location=?");
            
            stmt.setString(1,ahField.getText());
            stmt.setString(2,name);
            stmt.setString(3,location);
            int rows = stmt.executeUpdate();
            
            updateAtmTable();
            JOptionPane.showMessageDialog(this, "Succesfully updated");
            
            anField.setText(" ");
            aaField.setText(" ");
            ahField.setText(" ");
            
        }
        catch(SQLException e){
            System.err.println(e);
        }
       
      }
      else{
         JOptionPane.showMessageDialog(this, "Please select an item from list","warning",JOptionPane.WARNING_MESSAGE);
       }
    }//GEN-LAST:event_atmUpdateButtonActionPerformed

    private void updateLibraryTable(){
        DefaultTableModel model = new DefaultTableModel();
        libraryTable.setModel(model);
        
        model.addColumn("Name");
        model.addColumn("Location");
        model.addColumn("Timings");
        
        try{
            Connection con = MyDatabase.connect();
            PreparedStatement stmt = con.prepareStatement("select * from library");
            ResultSet rs = stmt.executeQuery();
            
            while(rs.next()){
               model.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3)});
            }
        }
        catch(SQLException e){
            System.err.println(e);
        }
    }
 
    private void libraryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_libraryTableMouseClicked
        int r= libraryTable.getSelectedRow ();
        String name = String.valueOf(libraryTable.getValueAt(r, 0));
        String location = String.valueOf(libraryTable.getValueAt(r, 1));
        String hours = String.valueOf(libraryTable.getValueAt(r, 2)); 
       
        lnField.setText (name); 
        laField.setText (location); 
        ltField.setText (hours);
    }//GEN-LAST:event_libraryTableMouseClicked

    private void libAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_libAddButtonActionPerformed
       String name = lnField.getText();
       String location = laField.getText();
       String hours = ltField.getText();
     
       if(name.length()==0 || location.length()==0 || hours.length()==0){
           JOptionPane.showMessageDialog(this, "Enter all fields");
           return;
       }
      try{
            Connection con = MyDatabase.connect();
            
            PreparedStatement stmt = con.prepareStatement("insert into library values(?,?,?)");
            stmt.setString(1,name);
            stmt.setString(2,location);
            stmt.setString(3,hours);
            
            int r= stmt.executeUpdate();
            updateLibraryTable();
            JOptionPane.showMessageDialog(this, "Succesfully added");
            lnField.setText(" ");
            laField.setText(" ");
            ltField.setText(" ");
            
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(this, "Library already added to database","Duplicate Entry",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_libAddButtonActionPerformed

    private void libDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_libDeleteButtonActionPerformed
        int r= libraryTable.getSelectedRow ();
        
        if(r!=-1){
        String name = String.valueOf(libraryTable.getValueAt(r, 0));
        String location = String.valueOf(libraryTable.getValueAt(r, 1));
         try{
            Connection con = MyDatabase.connect();
            
            PreparedStatement stmt = con.prepareStatement("delete from library where name = ? ");
            stmt.setString(1,name);
            
            
            int rows = stmt.executeUpdate();
            
           updateLibraryTable();
           
            lnField.setText("");
            laField.setText("");
            ltField.setText("");
            
            JOptionPane.showMessageDialog(this, "Succesfully deleted");
        }
        catch(SQLException e){
            System.err.println(e);
        }
       
        }
        else{
            JOptionPane.showMessageDialog(this, "Please select an item from list","warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_libDeleteButtonActionPerformed

    private void libUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_libUpdateButtonActionPerformed
        int r= libraryTable.getSelectedRow ();
       
        if(r!=-1){
        String name = String.valueOf(libraryTable.getValueAt(r, 0));
        String location = String.valueOf(libraryTable.getValueAt(r, 1));
        String hours = String.valueOf(libraryTable.getValueAt(r, 2)); 
         
        if(!lnField.getText().equals(name)){
             JOptionPane.showMessageDialog(this, "Change in Library Name is not permitted","warning",JOptionPane.WARNING_MESSAGE);
             return;
        }
        
        
         try{
            Connection con = MyDatabase.connect();
            
            PreparedStatement stmt = con.prepareStatement("update library set timings = ?,location=?   where name = ?");
            
            stmt.setString(1,ltField.getText());
            stmt.setString(2,laField.getText());
            stmt.setString(3,name);
            
            int rows = stmt.executeUpdate();
            
            updateLibraryTable();
            JOptionPane.showMessageDialog(this, "Succesfully updated");
            
            lnField.setText("");
            laField.setText("");
            ltField.setText("");
            
        }
        catch(SQLException e){
            System.err.println(e);
        }
       
      }
      else{
         JOptionPane.showMessageDialog(this, "Please select an item from list","warning",JOptionPane.WARNING_MESSAGE);
       }                                             
    }//GEN-LAST:event_libUpdateButtonActionPerformed

    private void numFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numFieldKeyPressed

    }//GEN-LAST:event_numFieldKeyPressed

    private void numFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numFieldKeyTyped

        char c=evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || c==KeyEvent.VK_DELETE)){
                evt.consume();
        }
    }//GEN-LAST:event_numFieldKeyTyped

    private void hospital_numKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hospital_numKeyTyped
        char c=evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || c==KeyEvent.VK_DELETE)){
                evt.consume();
        }
    }//GEN-LAST:event_hospital_numKeyTyped

    private void hoteltableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hoteltableMouseClicked
        int r= hoteltable.getSelectedRow ();
        String name = String.valueOf(hoteltable.getValueAt(r, 0));
        String location = String.valueOf(hoteltable.getValueAt(r, 1)); 
        String price = String.valueOf(hoteltable.getValueAt(r, 2));
        hotelname.setText (name); 
        hotelloc.setText (location); 
        priceField.setText(price);
    }//GEN-LAST:event_hoteltableMouseClicked

    private void DeletehotelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletehotelButtonActionPerformed
        int r = hoteltable.getSelectedRow();
        if(r!=-1){
            
        String name = String.valueOf(hoteltable.getValueAt(r,0));
       
         try{
            Connection con = MyDatabase.connect();
            
            PreparedStatement stmt = con.prepareStatement("delete from hotel where name = ?");
            stmt.setString(1,name);
            
            
            int rows = stmt.executeUpdate();
            
            updateManagehotelTable();
           
            hotelname.setText("");
            hotelloc.setText("");
            priceField.setText("");
            
            JOptionPane.showMessageDialog(this, "Succesfully deleted");
        }
        catch(SQLException e){
            System.err.println(e);
        }
       
        }
        else{
            JOptionPane.showMessageDialog(this, "Please select an item from list","warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_DeletehotelButtonActionPerformed

    private void UpdatehotelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdatehotelButtonActionPerformed
           int r = hoteltable.getSelectedRow();
        if(r!=-1){
        String name = String.valueOf(hoteltable.getValueAt(r,0));
        String location = String.valueOf(hoteltable.getValueAt(r,1));
        String price = String.valueOf(hoteltable.getValueAt(r,2));
        
        
        if(!hotelname.getText().equals(name)){
             JOptionPane.showMessageDialog(this, "Change in Hotel Name is not permitted","warning",JOptionPane.WARNING_MESSAGE);
             return;
        }
        
         try{
            Connection con = MyDatabase.connect();
            
            PreparedStatement stmt = con.prepareStatement("update hotel set location=?, price =?  where name = ?");
            
            stmt.setString(1,hotelloc.getText());
            stmt.setString(2,priceField.getText());
            stmt.setString(3,name);
            
            int rows = stmt.executeUpdate();
            
            updateManagehotelTable();
            JOptionPane.showMessageDialog(this, "Succesfully updated");
            
            hotelname.setText(" ");
            hotelloc.setText(" ");
            priceField.setText(" ");
            
        }
        catch(SQLException e){
            System.err.println(e);
        }
       
      }
      else{
         JOptionPane.showMessageDialog(this, "Please select an item from list","warning",JOptionPane.WARNING_MESSAGE);
       }
    }//GEN-LAST:event_UpdatehotelButtonActionPerformed

    private void priceFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceFieldKeyTyped
        char c=evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || c==KeyEvent.VK_DELETE)){
                evt.consume();
        }
    }//GEN-LAST:event_priceFieldKeyTyped

    private void ratingKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ratingKeyTyped
        char c=evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
                
    }//GEN-LAST:event_ratingKeyTyped

    private void hotelnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotelnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hotelnameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admin_new_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admin_new_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admin_new_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admin_new_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new admin_new_panel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddhospitalButton;
    private javax.swing.JButton AddhotelButton;
    private javax.swing.JButton DeletehospitalButton;
    private javax.swing.JButton DeletehotelButton;
    private javax.swing.JButton MUAddButton;
    private javax.swing.JButton MUDeleteButton;
    private javax.swing.JButton MUUpdateButton;
    private javax.swing.JButton UpdatehospitalButton;
    private javax.swing.JButton UpdatehotelButton;
    private javax.swing.JPanel a1;
    private javax.swing.JPanel a2;
    private javax.swing.JPanel a3;
    private javax.swing.JPanel a4;
    private javax.swing.JPanel a5;
    private javax.swing.JPanel a6;
    private javax.swing.JPanel a7;
    private javax.swing.JTextField aaField;
    private javax.swing.JTextField ahField;
    private javax.swing.JTextField anField;
    private javax.swing.JButton atmAddButton;
    private javax.swing.JButton atmDeleteButton;
    private javax.swing.JPanel atmPanel;
    private javax.swing.JTable atmTable;
    private javax.swing.JButton atmUpdateButton;
    private javax.swing.JPanel b4;
    private javax.swing.JPanel b5;
    private javax.swing.JPanel b6;
    private javax.swing.JTextField caField;
    private javax.swing.JTextField cnField;
    private javax.swing.JButton collegeAddButton;
    private javax.swing.JButton collegeDeleteButton;
    private javax.swing.JPanel collegePanel;
    private javax.swing.JTable collegeTable;
    private javax.swing.JButton collegeUpdateButton;
    private javax.swing.JTextField cwField;
    private javax.swing.JTextField hospitalLocation;
    private javax.swing.JTextField hospital_num;
    private javax.swing.JComboBox<String> hospital_type;
    private javax.swing.JTextField hospitalname;
    private javax.swing.JTable hospitaltable;
    private javax.swing.JTextField hotelloc;
    private javax.swing.JTextField hotelname;
    private javax.swing.JTable hoteltable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextField laField;
    private javax.swing.JButton libAddButton;
    private javax.swing.JButton libDeleteButton;
    private javax.swing.JButton libUpdateButton;
    private javax.swing.JPanel libraryPanel;
    private javax.swing.JTable libraryTable;
    private javax.swing.JTextField lnField;
    private javax.swing.JTextField ltField;
    private javax.swing.JTextField mailField;
    private javax.swing.JPanel manageUsersPanel;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField numField;
    private javax.swing.JTextField passwordField;
    private javax.swing.JTextField priceField;
    private javax.swing.JTextField rating;
    private javax.swing.JButton travelAddButton;
    private javax.swing.JButton travelDeleteButton;
    private javax.swing.JButton travelUpdateButton;
    private javax.swing.JTable traveltable;
    private javax.swing.JTextField userNameField;
    private javax.swing.JComboBox<String> userType;
    private javax.swing.JTable usersTable;
    // End of variables declaration//GEN-END:variables
}
